<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wu.blog.system.dao.LoginLogMapper">
  <resultMap id="BaseResultMap" type="com.wu.blog.system.entity.LoginLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="login_status" jdbcType="CHAR" property="loginStatus" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
  </resultMap>
  <sql id="Base_Column_List">
    id, login_time, username, login_status, ip
  </sql>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.wu.blog.system.entity.LoginLog" useGeneratedKeys="true">
    insert into login_log (login_time, username, login_status, 
      ip)
    values (#{loginTime,jdbcType=TIMESTAMP}, #{username,jdbcType=VARCHAR}, #{loginStatus,jdbcType=CHAR}, 
      #{ip,jdbcType=VARCHAR})
  </insert>


  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from login_log order by login_time desc
  </select>

  <select id="recentlyWeekLoginCount" parameterType="java.lang.String" resultType="int">
    select
      #   a.login_time,
      ifnull(b.count, 0) as count
    from (
           SELECT curdate() as login_time
           union all
           SELECT date_sub(curdate(), interval 1 day) as click_date
           union all
           SELECT date_sub(curdate(), interval 2 day) as click_date
           union all
           SELECT date_sub(curdate(), interval 3 day) as click_date
           union all
           SELECT date_sub(curdate(), interval 4 day) as click_date
           union all
           SELECT date_sub(curdate(), interval 5 day) as click_date
           union all
           SELECT date_sub(curdate(), interval 6 day) as click_date
         ) a left join (
      select
        date(login_time) as datetime,
        count(*)         as count
      from login_log where username = #{username}
      group by date(login_time)
    ) b on a.login_time = b.datetime order by login_time;
  </select>

  <select id="count" resultType="java.lang.Integer">
    select count(*) from login_log
  </select>
</mapper>